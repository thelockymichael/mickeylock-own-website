{"version":3,"sources":["config/logging.ts","config/config.ts","contexts/website.tsx","components/projects/ProjectItem.tsx","colors/colors.ts","pages/about.tsx","pages/home.tsx","services/projects.ts","pages/projects.tsx","pages/notFound.tsx","config/routes.ts","services/website.ts","App.tsx","index.tsx"],"names":["DEFAULT_NAMESPACE","config","defaults","namespace","getDate","Date","toISOString","logging","info","message","console","log","warn","error","WEBSITE_PROJECTS","process","WEBSITE_API","defaultState","website","setWebsite","WebsiteContext","createContext","ListItem","styled","div","primaryShade","ListItemImg","Image","img","ListItemRows","ListItemTop","TagContainer","TagItem","tagColor","secondaryText","InfoSection","infoSectColor","InfoText","p","infoTextColor","IconButton","button","IconContainer","TitleGithubButton","TitleContainer","TitleText","primaryText","GitHubButton","primaryColor","GitHubText","AHref","a","ProjectItem","item","useState","show","setShow","src","image","dataBase64","imgType","data","Buffer","from","toString","alt","onClick","size","color","secondaryColor","icon","faCaretUp","faCaretDown","name","href","gitHubLink","faGithub","tags","map","description","secondaryShade","Wrapper","Container","NavBar","NavBarBack","NavBarItem","NavLink","Link","Breakline","GroupContainer","TextContainer","ImageContainer","ProfileImage","AboutPage","props","useContext","selectedProfileImg","useEffect","to","faArrowLeft","aboutText","NameContainer","NameText","DescText","HomePage","descText","baseUrl","getAll","axios","get","response","ListContainer","ProjectsPage","projects","setProjects","getData","projectService","then","HeaderFont","h1","GoHomeContainer","GoHomeFont","NotFound","routes","path","component","exact","FooterContainer","FooterDiv","FooterText","Content","App","loading","setLoading","getWebsite","websiteServices","catch","post","initWebsite","Provider","value","route","index","render","target","faInstagram","faEnvelope","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37e48b35.chunk.js","sourcesContent":["import config from \"./config\";\n\nconst DEFAULT_NAMESPACE = config.defaults.namespace;\n\nconst info = (message: any, namespace?: string) => {\n  if (typeof message === \"string\") {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO] ${message}`\n    );\n  } else {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO]`,\n      message\n    );\n  }\n};\n\nconst warn = (message: any, namespace?: string) => {\n  if (typeof message === \"string\") {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN] ${message}`\n    );\n  } else {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN]`,\n      message\n    );\n  }\n};\n\nconst error = (message: any, namespace?: string) => {\n  if (typeof message === \"string\") {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR] ${message}`\n    );\n  } else {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR]`,\n      message\n    );\n  }\n};\n\nconst getDate = () => {\n  return new Date().toISOString();\n};\n\nconst logging = {\n  info,\n  warn,\n  error,\n};\n\nexport default logging;\n","const config = {\n  defaults: {\n    namespace: \"Application\",\n  },\n  WEBSITE_PROJECTS: process.env.REACT_APP_API_PROJECTS_URL,\n  WEBSITE_API: process.env.REACT_APP_API_WEBSITE_URL,\n}\n\nexport default config\n","import React, { useState, createContext } from \"react\";\nimport { IWebsite } from \"../models/index\";\n\nexport interface IWebsiteContext {\n  website: IWebsite;\n  setWebsite?: (website: IWebsite) => void;\n}\n\nconst defaultState = {\n  website: {},\n  setWebsite: () => {},\n};\n\nconst WebsiteContext = createContext<IWebsiteContext>(defaultState);\n\nconst WebsiteProvider: React.FC = ({ children }) => {\n  const [website, setWebsite] = useState<IWebsite>(defaultState.website);\n\n  return (\n    <WebsiteContext.Provider\n      value={{\n        website,\n        setWebsite,\n      }}\n    >\n      {children}\n    </WebsiteContext.Provider>\n  );\n};\n\nexport { WebsiteContext, WebsiteProvider };\n","import React, { useState } from \"react\"\n\nimport styled from \"styled-components\"\nimport {\n  infoSectColor,\n  infoTextColor,\n  primaryColor,\n  primaryShade,\n  primaryText,\n  secondaryColor,\n  secondaryText,\n  tagColor,\n} from \"../../colors/colors\"\n\n// Icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\"\n\n// Route\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { IProject } from \"../../models\"\n\nconst ListItem = styled.div`\n  background: ${primaryShade};\n  font-size: 2rem;\n  text-align: center;\n  position: relative;\n`\n\nconst ListItemImg = styled.div``\n\nconst Image = styled.img`\n  /* display: block;\n  width: 100%; */\n\n  width: 100%;\n  max-height: 100%;\n  left: 50%;\n  top: 50%;\n  height: 100%;\n  object-fit: cover;\n  /** */\n  /* @media (max-width: 768px) {\n    max-width: 100% !important;\n  } */\n`\n\nconst ListItemRows = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\n// TOP\nconst ListItemTop = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst TagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 1.5rem 1.5rem;\n`\n\nconst TagItem = styled.div`\n  margin: 0.5rem;\n  background: ${tagColor};\n  color: ${secondaryText};\n  padding: 1rem;\n  border-radius: 1rem;\n  font-size: 2rem;\n  text-align: center;\n`\n\nconst InfoSection = styled.div`\n  background-color: ${infoSectColor};\n  width: 100%;\n  height: 30%;\n\n  border-radius: 0rem 0rem 2rem 2rem;\n\n  position: absolute;\n  left: 50%;\n  bottom: -44%;\n  transform: translate(-50%, -50%);\n\n  z-index: 10;\n\n  @media (max-width: 768px) {\n    height: 70%;\n    bottom: -104%;\n  }\n`\n\nconst InfoText = styled.p`\n  font-size: 1em;\n  font-weight: 400;\n  color: ${infoTextColor};\n  text-align: left;\n  padding: 1rem;\n`\n\nconst IconButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n`\n\nconst IconContainer = styled.div`\n  display: flex;\n  padding: 0rem 2rem;\n`\n\nconst TitleGithubButton = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 2rem 2rem;\n  justify-content: space-between;\n`\n\nconst TitleContainer = styled.div``\n\nconst TitleText = styled.p`\n  font-size: 2em;\n  color: ${primaryText};\n  @media (max-width: 768px) {\n    font-size: 1.25em;\n    font-weight: 400;\n  }\n`\n\nconst GitHubButton = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${primaryColor};\n  border-radius: 2rem;\n  width: 100%;\n  padding: 1rem;\n`\n\nconst GitHubText = styled.p`\n  font-size: 2em;\n  @media (max-width: 768px) {\n    font-size: 0.5em;\n  }\n`\n\nconst AHref = styled.a`\n  color: ${primaryText};\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n`\n\nexport type IProjectItemProps = {\n  item: IProject\n}\n\nconst ProjectItem: React.FC<IProjectItemProps> = ({ item }) => {\n  const [show, setShow] = useState<boolean>(false)\n\n  let src: string = \"https://via.placeholder.com/700x400\"\n  if (item.image) {\n    let imgType = item.image?.imgType\n    let img = item.image?.img\n    let dataBase64\n    if (img) dataBase64 = img.data\n    const data = Buffer.from(dataBase64).toString(\"base64\")\n    src = `data:${imgType};charset=utf-8;base64,${data}`\n  }\n\n  return (\n    <ListItem>\n      <ListItemImg>\n        <Image\n          alt=\"background\"\n          src={\n            src ||\n            \"https://png.pngtree.com/thumb_back/fh260/background/20200714/pngtree-modern-double-color-futuristic-neon-background-image_351866.jpg\"\n          }\n        />\n      </ListItemImg>\n      <ListItemRows>\n        <ListItemTop>\n          <IconButton onClick={() => setShow(!show)}>\n            <IconContainer>\n              <FontAwesomeIcon\n                size=\"3x\"\n                color={secondaryColor}\n                icon={!show ? faCaretDown : faCaretUp}\n              />\n            </IconContainer>\n          </IconButton>\n\n          <TitleGithubButton>\n            <TitleContainer>\n              <TitleText>{item.name}</TitleText>\n            </TitleContainer>\n            <div>\n              <AHref href={item.gitHubLink || \"https://github.com/\"}>\n                <GitHubButton>\n                  <FontAwesomeIcon\n                    size=\"2x\"\n                    color={secondaryColor}\n                    icon={faGithub}\n                  />\n                  <GitHubText>\n                    {item.gitHubLink ? \"GitHub\" : \"No link\"}\n                  </GitHubText>\n                </GitHubButton>\n              </AHref>\n            </div>\n          </TitleGithubButton>\n        </ListItemTop>\n        <TagContainer>\n          {item.tags!!.map((item) => (\n            <TagItem>{item}</TagItem>\n          ))}\n        </TagContainer>\n        {show && (\n          <InfoSection>\n            <InfoText>{item.description}</InfoText>\n          </InfoSection>\n        )}\n      </ListItemRows>\n    </ListItem>\n  )\n}\n\nexport { ProjectItem }\n","// Text\n\nconst primaryText = \"#212224\";\nconst secondaryText = \"#FFF\";\n\n// Containers\nconst primaryColor = \"#FFF\";\nconst primaryShade = \"#F5F5F5\";\nconst secondaryColor = \"#212224\";\nconst secondaryShade = \"#313235\";\n\n// Icons\n\n// Background color\n\n// Projects ListItem, tag colors\nconst tagColor = \"#502274\";\n// Projects ListItem Info Section\nconst infoSectColor = \"#E0E0E0E8\";\nconst infoTextColor = \"#000\";\n\nexport {\n  primaryText,\n  secondaryText,\n  primaryColor,\n  primaryShade,\n  secondaryColor,\n  secondaryShade,\n  tagColor,\n  infoSectColor,\n  infoTextColor,\n};\n","import React, { useEffect, useContext } from \"react\";\nimport IPage from \"../interfaces/page\";\nimport logging from \"../config/logging\";\n\nimport styled from \"styled-components\";\n\nimport {\n  primaryColor,\n  primaryShade,\n  primaryText,\n  secondaryColor,\n} from \"../colors/colors\";\n\n// Icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n// Route\nimport { Link } from \"react-router-dom\";\nimport { WebsiteContext } from \"../contexts/website\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  background-color: ${primaryColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\n// My name container & text\nconst NavBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst NavBarBack = styled.div`\n  padding: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst NavBarItem = styled.div`\n  flex: 2;\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    padding: 2rem;\n    flex: 1;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  font-size: 10em;\n  color: ${primaryText};\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  &:hover {\n    color: ${primaryColor};\n    background-color: ${secondaryColor};\n  }\n  @media (max-width: 768px) {\n    font-size: 4em;\n    text-align-last: left;\n  }\n`;\n\nconst Breakline = styled.div`\n  height: 0.5rem;\n  background-color: ${primaryShade};\n`;\n\nconst GroupContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  flex-direction: row;\n  @media (max-width: 768px) {\n    justify-content: flex-start;\n    flex-direction: column;\n  }\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 2rem;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  padding: 2rem;\n  width: 100%;\n`;\n\nconst ProfileImage = styled.img`\n  display: block;\n  @media (max-width: 768px) {\n    max-width: 100% !important;\n  }\n`;\n\nconst AboutPage: React.FC<IPage> = (props) => {\n  const { website } = useContext(WebsiteContext);\n  let src: string = \"https://via.placeholder.com/700x400\";\n  if (website.selectedProfileImg) {\n    let imgType = website.selectedProfileImg?.imgType;\n    let img = website.selectedProfileImg?.img;\n    let dataBase64;\n    if (img) dataBase64 = img.data;\n    const data = Buffer.from(dataBase64).toString(\"base64\");\n    src = `data:${imgType};charset=utf-8;base64,${data}`;\n  }\n\n  useEffect(() => {\n    logging.info(`Loading ${props.name}`);\n  }, [props.name]);\n\n  return (\n    <Wrapper>\n      <Container>\n        <NavBar>\n          <NavBarBack>\n            <Link to=\"/\">\n              <FontAwesomeIcon\n                size=\"6x\"\n                color={secondaryColor}\n                icon={faArrowLeft}\n              />\n            </Link>\n          </NavBarBack>\n          <Breakline />\n          <NavBarItem>\n            <NavLink to=\"/about\">About</NavLink>\n          </NavBarItem>\n          <Breakline />\n          <NavBarItem>\n            <NavLink to=\"/projects\">Projects</NavLink>\n          </NavBarItem>\n          <Breakline />\n        </NavBar>\n        <GroupContainer>\n          <ImageContainer>\n            <ProfileImage alt=\"profile\" src={src} />\n          </ImageContainer>\n          <TextContainer>\n            <p>{website.aboutText}</p>\n          </TextContainer>\n        </GroupContainer>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default AboutPage;\n","import React, { useEffect, useContext, useState } from \"react\"\nimport IPage from \"../interfaces/page\"\nimport logging from \"../config/logging\"\nimport { Link } from \"react-router-dom\"\n\nimport * as websiteServices from \"../services/website\"\n\nimport styled from \"styled-components\"\n\nimport { primaryColor, primaryText, secondaryColor } from \"../colors/colors\"\nimport { useWebsiteContext } from \"../hooks/website\"\nimport { WebsiteContext } from \"../contexts/website\"\n\nconst Wrapper = styled.div`\n  height: 100%;\n  background-color: ${primaryColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Container = styled.div`\n  display: flex;\n  height: 50rem;\n  width: 100rem;\n  justify-content: space-around;\n  flex-direction: column;\n`\n\nconst NavLink = styled(Link)`\n  font-size: 10em;\n  color: ${primaryText};\n  text-decoration: none;\n  &:hover {\n    color: ${primaryColor};\n    background: ${secondaryColor};\n  }\n  @media (max-width: 768px) {\n    font-size: 10em;\n  }\n`\n\n// My name container & text\nconst NameContainer = styled.div`\n  height: \"40%\";\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst NameText = styled.p`\n  font-size: 14em;\n  @media (max-width: 768px) {\n    font-size: 10em;\n  }\n`\n\nconst DescText = styled.p`\n  font-size: 2em;\n`\n\n/* END */\n\nconst GroupContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  flex-direction: row;\n  @media (max-width: 768px) {\n    align-items: center;\n    flex-direction: column;\n  }\n`\n\nconst HomePage: React.FC<IPage> = (props) => {\n  // TODO\n  // 1. Update name\n  // 2. Update Desc Text\n\n  const [loading, setLoading] = useState<Boolean>(true)\n\n  const { website } = useContext(WebsiteContext)\n\n  useEffect(() => {\n    logging.info(`Loading ${props.name}`)\n  }, [props.name])\n\n  return (\n    <Wrapper>\n      <Container>\n        <NameContainer>\n          <NameText>{website.name}</NameText>\n          <DescText>{website.descText}</DescText>\n        </NameContainer>\n        <GroupContainer>\n          <div>\n            <NavLink to=\"/about\"> About </NavLink>\n          </div>\n          <div>\n            <NavLink to=\"/projects\"> Projects </NavLink>\n          </div>\n        </GroupContainer>\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default HomePage\n","import axios from \"axios\"\nimport config from \"../config/config\"\nimport { IProject } from \"../models\"\nconst baseUrl = config.WEBSITE_PROJECTS || \"/api/website/projects\"\n\nconst getAll = async () => {\n  const response = await axios.get<Array<IProject>>(baseUrl)\n\n  return response.data\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll }\n","import React, { useContext, useEffect, useState } from \"react\"\nimport IPage from \"../interfaces/page\"\nimport logging from \"../config/logging\"\n\nimport styled from \"styled-components\"\n\nimport {\n  primaryColor,\n  primaryShade,\n  primaryText,\n  secondaryColor,\n} from \"../colors/colors\"\n\n// Icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faArrowLeft, faCaretDown } from \"@fortawesome/free-solid-svg-icons\"\n\n// Route\nimport { Link } from \"react-router-dom\"\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { ProjectItem } from \"../components\"\n\nimport { WebsiteContext } from \"../contexts/website\"\nimport { IProject } from \"../models\"\n\nimport projectService from \"../services/projects\"\n\nconst Wrapper = styled.div`\n  height: 100%;\n  background-color: ${primaryColor};\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  justify-content: space-around;\n`\n\n// My name container & text\nconst NavBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nconst NavBarBack = styled.div`\n  padding: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    justify-content: flex-start;\n  }\n`\n\nconst NavBarItem = styled.div`\n  flex: 2;\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    padding: 2rem;\n    flex: 1;\n  }\n`\n\nconst NavLink = styled(Link)`\n  font-size: 10em;\n  color: ${primaryText};\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  &:hover {\n    color: ${primaryColor};\n    background-color: ${secondaryColor};\n  }\n  @media (max-width: 768px) {\n    font-size: 4em;\n    text-align-last: left;\n  }\n`\n\nconst Breakline = styled.div`\n  height: 0.5rem;\n  background-color: ${primaryShade};\n`\n\nconst ListContainer = styled.div`\n  display: grid;\n  margin: 2rem 2rem;\n  grid-auto-columns: minmax(60rem, auto);\n  grid-template-columns: repeat(auto-fill, minmax(60rem, 1fr));\n  grid-gap: 2rem;\n\n  @media (max-width: 768px) {\n    grid-auto-columns: minmax(60rem, auto);\n    grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));\n  }\n`\n\nconst ProjectsPage: React.FC<IPage> = (props) => {\n  const [projects, setProjects] = useState<Array<IProject>>([])\n\n  useEffect(() => {\n    const getData = async () => {\n      projectService.getAll().then((projects) => {\n        setProjects(projects)\n      })\n\n      logging.info(`Loading ${props.name}`)\n    }\n    getData()\n  }, [props.name])\n\n  return (\n    <Wrapper>\n      <Container>\n        <NavBar>\n          <NavBarBack>\n            <Link to=\"/\">\n              <FontAwesomeIcon\n                size=\"6x\"\n                color={secondaryColor}\n                icon={faArrowLeft}\n              />\n            </Link>\n          </NavBarBack>\n          <Breakline />\n          <NavBarItem>\n            <NavLink to=\"/about\">About</NavLink>\n          </NavBarItem>\n          <Breakline />\n          <NavBarItem>\n            <NavLink to=\"/projects\">Projects</NavLink>\n          </NavBarItem>\n          <Breakline />\n        </NavBar>\n        <ListContainer>\n          {projects?.map((item) => (\n            <ProjectItem item={item} />\n          ))}\n        </ListContainer>\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default ProjectsPage\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  primaryColor,\n  primaryText,\n  secondaryColor,\n  secondaryShade,\n  secondaryText,\n} from \"../colors/colors\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n`;\n\nconst HeaderFont = styled.h1`\n  font-size: 7em;\n`;\n\nconst GoHomeContainer = styled.div`\n  padding: 4rem;\n  margin-top: 4rem;\n  background-color: ${secondaryColor};\n\n  :hover {\n    background-color: ${secondaryShade};\n  }\n`;\n\nconst GoHomeFont = styled.div`\n  font-size: 7em;\n  color: ${secondaryText};\n`;\n\nconst NotFound: React.FC = () => {\n  return (\n    <Container>\n      <HeaderFont>404 - Page Not Found!</HeaderFont>\n      <GoHomeContainer>\n        <Link to=\"/\">\n          <GoHomeFont>Go to Home page</GoHomeFont>\n        </Link>\n      </GoHomeContainer>\n    </Container>\n  );\n};\n\nexport default NotFound;\n","import IRoute from \"../interfaces/route\";\nimport AboutPage from \"../pages/about\";\nimport HomePage from \"../pages/home\";\nimport ProjectsPage from \"../pages/projects\";\nimport NotFound from \"../pages/notFound\";\n\nconst routes: IRoute[] = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: HomePage,\n    exact: true,\n  },\n  {\n    path: \"/about\",\n    name: \"About\",\n    component: AboutPage,\n    exact: true,\n  },\n  {\n    path: \"/projects\",\n    name: \"Projects\",\n    component: ProjectsPage,\n    exact: true,\n  },\n  {\n    path: \"/*\",\n    name: \"Page Not Found\",\n    component: NotFound,\n    exact: true,\n  },\n];\n\nexport default routes;\n","import axios from \"axios\"\nimport config from \"../config/config\"\nimport { IWebsite } from \"../models\"\nconst baseUrl = config.WEBSITE_API || \"/api/website\"\n\nconsole.log(\"baseUrl\", baseUrl)\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl + \"/selectedProfileImg\")\n\n  return response\n}\n\nexport const initWebsite = () => {\n  return axios.post(baseUrl).then((response) => {\n    console.log(\"response.data\", response.data)\n\n    return response.data\n  })\n}\n\nexport { getAll }\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport {\n  primaryColor,\n  secondaryColor,\n  secondaryShade,\n  secondaryText,\n} from \"./colors/colors\";\nimport routes from \"./config/routes\";\n\n// Icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faInstagram } from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\n\n// Website service\nimport { WebsiteContext } from \"./contexts/website\";\nimport * as websiteServices from \"./services/website\";\nimport { IWebsite } from \"./models\";\n\nconst FooterContainer = styled.div`\n  flex: 0 1 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n`;\n\nconst FooterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${secondaryColor};\n  max-width: 100%;\n  height: 5rem;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  width: 16rem;\n  height: 100%;\n  justify-content: space-around;\n`;\n\nconst FooterText = styled.div`\n  color: ${secondaryText};\n  font-size: 2.5em;\n`;\n\nconst Breakline = styled.div`\n  height: 2px;\n  background-color: ${secondaryShade};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n`;\n\nconst Content = styled.div`\n  flex: 1 1 auto;\n  background-color: ${primaryColor};\n`;\n\nconst App: React.FC<{}> = () => {\n  const [website, setWebsite] = useState<IWebsite>({});\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    const getWebsite = async () => {\n      await websiteServices\n        .getAll()\n        .then((response: any) => {\n          setWebsite(response.data);\n          setLoading(false);\n        })\n        .catch(async (error: Error) => {\n          const initWebsite = await websiteServices.initWebsite();\n\n          setWebsite(initWebsite);\n\n          console.log(error);\n          setLoading(false);\n        });\n    };\n    getWebsite();\n  }, []);\n\n  return (\n    <Router>\n      <WebsiteContext.Provider value={{ website }}>\n        {!loading && (\n          <Wrapper>\n            <Content>\n              <Switch>\n                {routes.map((route, index) => {\n                  return (\n                    <Route\n                      key={index}\n                      path={route.path}\n                      exact={route.exact}\n                      render={(props: RouteComponentProps<any>) => (\n                        <route.component\n                          name={route.name}\n                          {...props}\n                          {...route.props}\n                        />\n                      )}\n                    />\n                  );\n                })}\n              </Switch>\n            </Content>\n            <FooterContainer>\n              <FooterDiv>\n                <NameContainer>\n                  <FooterText>You can find me at </FooterText>\n                </NameContainer>\n              </FooterDiv>\n              <FooterDiv>\n                <IconContainer>\n                  <a\n                    target=\"!blank\"\n                    href=\"https://www.instagram.com/mihkelilokki/\"\n                  >\n                    <FontAwesomeIcon\n                      size=\"4x\"\n                      color=\"#FFF\"\n                      icon={faInstagram}\n                    />\n                  </a>\n                  <a target=\"!blank\" href=\"https://github.com/thelockymichael\">\n                    <FontAwesomeIcon size=\"4x\" color=\"#FFF\" icon={faGithub} />\n                  </a>\n                  <a target=\"!blank\" href=\"mailto:michael.rich.lock@gmail.com\">\n                    <FontAwesomeIcon size=\"4x\" color=\"#FFF\" icon={faEnvelope} />\n                  </a>\n                </IconContainer>\n              </FooterDiv>\n              <Breakline />\n              <FooterDiv>\n                <NameContainer>\n                  <FooterText>© 2021 Michael Lock</FooterText>\n                </NameContainer>\n              </FooterDiv>\n            </FooterContainer>\n          </Wrapper>\n        )}\n      </WebsiteContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}