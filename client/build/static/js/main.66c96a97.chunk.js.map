{"version":3,"sources":["colors/colors.ts","config/logging.ts","config/config.ts","pages/about.tsx","pages/home.tsx","config/routes.ts","pages/projects.tsx","App.tsx","index.tsx"],"names":["secondaryColor","DEFAULT_NAMESPACE","defaults","namespace","getDate","Date","toISOString","logging","info","message","console","log","warn","error","AboutPage","props","useEffect","name","Wrapper","styled","div","NavLink","Link","GroupContainer","routes","path","component","to","exact","Footer","FooterText","App","map","route","index","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"yNAOMA,EAAiB,UCLjBC,ECFS,CACbC,SAAU,CACRC,UAAW,gBDAkBD,SAASC,UAyCpCC,EAAU,WACd,OAAO,IAAIC,MAAOC,eASLC,EANC,CACdC,KA5CW,SAACC,EAAcN,GACH,kBAAZM,EACTC,QAAQC,IAAR,WACMP,IADN,cACqBD,GAAaF,EADlC,oBAC+DQ,IAG/DC,QAAQC,IAAR,WACMP,IADN,cACqBD,GAAaF,EADlC,YAEEQ,IAqCJG,KAhCW,SAACH,EAAcN,GACH,kBAAZM,EACTC,QAAQC,IAAR,WACMP,IADN,cACqBD,GAAaF,EADlC,oBAC+DQ,IAG/DC,QAAQC,IAAR,WACMP,IADN,cACqBD,GAAaF,EADlC,YAEEQ,IAyBJI,MApBY,SAACJ,EAAcN,GACJ,kBAAZM,EACTC,QAAQC,IAAR,WACMP,IADN,cACqBD,GAAaF,EADlC,qBACgEQ,IAGhEC,QAAQC,IAAR,WACMP,IADN,cACqBD,GAAaF,EADlC,aAEEQ,K,OEzBSK,EAR+C,SAACC,GAK7D,OAJAC,qBAAU,WACRT,EAAQC,KAAR,kBAAwBO,EAAME,SAC7B,CAACF,EAAME,OAEH,yCAAYF,EAAME,KAAlB,aCEHC,EAAUC,IAAOC,IAAV,oHAOPC,EAAUF,YAAOG,IAAPH,CAAH,mJJbQ,OImBHnB,GAIZuB,EAAiBJ,IAAOC,IAAV,mNCHLI,EArBU,CACvB,CACEC,KAAM,IACNR,KAAM,YACNS,UD+B8B,SAACX,GAKjC,OAJAC,qBAAU,WACRT,EAAQC,KAAR,kBAAwBO,EAAME,SAC7B,CAACF,EAAME,OAGR,cAACC,EAAD,UACE,eAACK,EAAD,WACE,8BACE,cAACF,EAAD,CAASM,GAAG,SAAZ,uBAEF,8BACE,cAACN,EAAD,CAASM,GAAG,YAAZ,gCC1CNC,OAAO,GAET,CACEH,KAAM,SACNR,KAAM,aACNS,UAAWZ,EACXc,OAAO,GAET,CACEH,KAAM,YACNR,KAAM,gBACNS,UCjBkC,SAACX,GAKrC,OAJAC,qBAAU,WACRT,EAAQC,KAAR,kBAAwBO,EAAME,SAC7B,CAACF,EAAME,OAEH,yCAAYF,EAAME,KAAlB,aDaLW,OAAO,IEVLC,EAASV,IAAOC,IAAV,6HAEUpB,GAKhB8B,EAAaX,IAAOC,IAAV,+DPhBM,QOsDPW,EAjCW,WAIxB,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,UACGP,EAAOQ,KAAI,SAACC,EAAOC,GAClB,OACE,cAAC,IAAD,CAEET,KAAMQ,EAAMR,KACZG,MAAOK,EAAML,MACbO,OAAQ,SAACpB,GAAD,OACN,cAACkB,EAAMP,UAAP,yBACET,KAAMgB,EAAMhB,MACRF,GACAkB,EAAMlB,UAPTmB,QAcb,cAACL,EAAD,UACE,cAACC,EAAD,iDC7CVM,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.66c96a97.chunk.js","sourcesContent":["// Text\n\nconst primaryText = \"#212224\";\nconst secondaryText = \"#FFF\";\n\n// Containers\nconst primaryColor = \"#FFF\";\nconst secondaryColor = \"#212224\";\n\nexport { primaryText, secondaryText, primaryColor, secondaryColor };\n","import config from \"./config\";\n\nconst DEFAULT_NAMESPACE = config.defaults.namespace;\n\nconst info = (message: any, namespace?: string) => {\n  if (typeof message === \"string\") {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO] ${message}`\n    );\n  } else {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [INFO]`,\n      message\n    );\n  }\n};\n\nconst warn = (message: any, namespace?: string) => {\n  if (typeof message === \"string\") {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN] ${message}`\n    );\n  } else {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [WARN]`,\n      message\n    );\n  }\n};\n\nconst error = (message: any, namespace?: string) => {\n  if (typeof message === \"string\") {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR] ${message}`\n    );\n  } else {\n    console.log(\n      `[${getDate()}] [${namespace || DEFAULT_NAMESPACE}] [ERROR]`,\n      message\n    );\n  }\n};\n\nconst getDate = () => {\n  return new Date().toISOString();\n};\n\nconst logging = {\n  info,\n  warn,\n  error,\n};\n\nexport default logging;\n","const config = {\n  defaults: {\n    namespace: \"Application\",\n  },\n};\n\nexport default config;\n","import React, { useEffect } from \"react\";\nimport IPage from \"../interfaces/page\";\nimport logging from \"../config/logging\";\nimport { RouteComponentProps } from \"react-router\";\n\nconst AboutPage: React.FC<IPage & RouteComponentProps<any>> = (props) => {\n  useEffect(() => {\n    logging.info(`Loading ${props.name}`);\n  }, [props.name]);\n\n  return <p>This is {props.name} page!</p>;\n};\n\nexport default AboutPage;\n","import React, { useEffect } from \"react\";\nimport IPage from \"../interfaces/page\";\nimport logging from \"../config/logging\";\nimport { Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nimport { primaryColor, secondaryColor } from \"../colors/colors\";\n\n// TODO\n// Title\n\nconst Wrapper = styled.div`\n  height: 900px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst NavLink = styled(Link)`\n  font-size: 10em;\n  color: black;\n  text-decoration: none;\n  &:hover {\n    color: ${primaryColor};\n    background: ${secondaryColor};\n  }\n`;\n\nconst GroupContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  flex-direction: row;\n  @media (max-width: 768px) {\n    align-items: center;\n    flex-direction: column;\n  }\n`;\n\nconst HomePage: React.FC<IPage> = (props) => {\n  useEffect(() => {\n    logging.info(`Loading ${props.name}`);\n  }, [props.name]);\n\n  return (\n    <Wrapper>\n      <GroupContainer>\n        <div>\n          <NavLink to=\"/about\"> About </NavLink>\n        </div>\n        <div>\n          <NavLink to=\"/projects\"> Projects </NavLink>\n        </div>\n      </GroupContainer>\n    </Wrapper>\n  );\n};\n\nexport default HomePage;\n","import IRoute from \"../interfaces/route\";\nimport AboutPage from \"../pages/about\";\nimport HomePage from \"../pages/home\";\nimport ProjectsPage from \"../pages/projects\";\n\nconst routes: IRoute[] = [\n  {\n    path: \"/\",\n    name: \"Home Page\",\n    component: HomePage,\n    exact: true,\n  },\n  {\n    path: \"/about\",\n    name: \"About Page\",\n    component: AboutPage,\n    exact: true,\n  },\n  {\n    path: \"/projects\",\n    name: \"Projects Page\",\n    component: ProjectsPage,\n    exact: true,\n  },\n];\n\nexport default routes;\n","import React, { useEffect } from \"react\";\nimport IPage from \"../interfaces/page\";\nimport logging from \"../config/logging\";\n\nconst ProjectsPage: React.FC<IPage> = (props) => {\n  useEffect(() => {\n    logging.info(`Loading ${props.name}`);\n  }, [props.name]);\n\n  return <p>This is {props.name} page!</p>;\n};\n\nexport default ProjectsPage;\n","import React from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { primaryColor, secondaryColor, secondaryText } from \"./colors/colors\";\nimport routes from \"./config/routes\";\n\nconst Footer = styled.div`\n  display: flex;\n  background-color: ${secondaryColor};\n  justify-content: space-around;\n  max-width: 100%;\n`;\n\nconst FooterText = styled.div`\n  color: ${secondaryText};\n  font-size: 2.5em;\n`;\n\nconst App: React.FC<{}> = () => {\n  // TODO\n  // Router\n  // Switch\n  return (\n    <div>\n      <Router>\n        <Switch>\n          {routes.map((route, index) => {\n            return (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                render={(props: RouteComponentProps<any>) => (\n                  <route.component\n                    name={route.name}\n                    {...props}\n                    {...route.props}\n                  />\n                )}\n              />\n            );\n          })}\n        </Switch>\n        <Footer>\n          <FooterText>Copyright instagram github</FooterText>\n        </Footer>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}